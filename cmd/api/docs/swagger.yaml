basePath: /
definitions:
  domain.AuthOutput:
    properties:
      expiresAt:
        type: string
      token:
        type: string
      user:
        $ref: '#/definitions/domain.User'
    type: object
  domain.LoginInput:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  domain.User:
    properties:
      active:
        type: boolean
      email:
        type: string
      id:
        type: string
      username:
        type: string
    type: object
  domain.UserCreationInput:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  utils.ErrorResponse:
    properties:
      details: {}
      error:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: LoreCrafter API for managing lore and storytelling.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: LoreCrafter API
  version: "1.0"
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Login a user with the provided credentials
      parameters:
      - description: User login details
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: User logged in successfully
          schema:
            $ref: '#/definitions/domain.AuthOutput'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Login a user
      tags:
      - auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with the provided credentials
      parameters:
      - description: User registration details
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.UserCreationInput'
      produces:
      - application/json
      responses:
        "201":
          description: User registered successfully
          schema:
            $ref: '#/definitions/domain.AuthOutput'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "409":
          description: User already exists
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
  /api/me:
    get:
      consumes:
      - application/json
      description: Based on the logged user, get information from the token
      produces:
      - application/json
      responses:
        "201":
          description: User registered successfully
          schema:
            $ref: '#/definitions/domain.AuthOutput'
        "401":
          description: missing authorization header
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Get info about the logged user
      tags:
      - user
schemes:
- http
swagger: "2.0"

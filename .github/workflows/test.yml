name: Test Pipeline

on:
  pull_request:
    branches:
      - main
      - develop

env:
  POSTGRES_USER: "postgres"
  POSTGRES_PASSWORD: "postgres"
  POSTGRES_URL: "postgresql://postgres:postgres@localhost:5432/lorecrafter_test?sslmode=disable"

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        # Give the container time to initialize
        timeout-minutes: 2

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '^1.23.0'
          check-latest: true

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/go/bin
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Wait for PostgreSQL
        run: |
          for i in {1..10}; do
            if pg_isready -h localhost -p 5432 -U postgres; then
              echo "PostgreSQL is ready"
              break
            fi
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done

      - name: Run tests
        env:
          POSTGRES_URL: ${{ env.POSTGRES_URL }}
        run: |
          go test -v -coverprofile=coverage.out -covermode=atomic $(shell go list ./... | grep -v "docs\|pkg")
          go tool cover -html=coverage.out -o coverage.html
          go tool cover -func=coverage.out
        

#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v3
#        with:
#          file: ./coverage.out
#          fail_ci_if_error: false